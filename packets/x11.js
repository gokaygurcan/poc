// @flow

// types
import type { tCharacter } from '../types';

export const x11 = (character: tCharacter): Buffer => {
  let tmp_0x11: Array<number> = [0x11]; // status bar info
  
  tmp_0x11 = tmp_0x11.concat([0x00, 0x70]); // length
  tmp_0x11 = tmp_0x11.concat([0x00, 0x00, 0x1f, 0xc4]); // player serial
  tmp_0x11 = tmp_0x11.concat(Buffer.from(character.charName).toJSON().data); // player name
  tmp_0x11 = tmp_0x11.concat([0x00, 0x19]); // Current Hit Points (see notes)
  tmp_0x11 = tmp_0x11.concat([0x00, 0x19]); // Max Hit Points (see notes)
  /*
  1: Allowed to Change In StatusBar (like with pets)
  0: Not allowed
  */
  tmp_0x11 = tmp_0x11.concat([0x00]); // Name Change Flag
  /*
  0x00: no more data following (end of packet here).
  0x01: T2A Extended Info
  0x03: UOR Extended Info
  0x04: AOS Extended Info (4.0+)
  0x05: UOML Extended Info (5.0+)
  0x06: UOKR Extended Info (UOKR+)
  */
  tmp_0x11 = tmp_0x11.concat([0x06]); // Status Flag
  /*
  0: Male Human
  1: Female Human
  2: Male Elf
  3: Female Elf

  1: Human
  2: Elf
  3: Gargoyle
  */
  tmp_0x11 = tmp_0x11.concat([0x00]); // Sex+Race
  tmp_0x11 = tmp_0x11.concat([0x00, 0x19]); // Strength
  tmp_0x11 = tmp_0x11.concat([0x00, 0x14]); // Dexterity
  tmp_0x11 = tmp_0x11.concat([0x00, 0x2d]); // Intelligence
  tmp_0x11 = tmp_0x11.concat([0x00, 0x14]); // Current Stamina
  tmp_0x11 = tmp_0x11.concat([0x00, 0x14]); // Max Stamina
  tmp_0x11 = tmp_0x11.concat([0x00, 0x2d]); // Current Mana
  tmp_0x11 = tmp_0x11.concat([0x00, 0x2d]); // Max Mana
  tmp_0x11 = tmp_0x11.concat([0x00, 0x00, 0x03, 0xe8]); // Gold In Pack
  tmp_0x11 = tmp_0x11.concat([0x00, 0x06]); // Armor Rating (see notes)
  tmp_0x11 = tmp_0x11.concat([0x00, 0x3d]); // Weight

  tmp_0x11 = tmp_0x11.concat([0x00, 0x7f]); // Hit Chance Increase
  tmp_0x11 = tmp_0x11.concat([0x01, 0x01]); // Swing Speed Increase
  tmp_0x11 = tmp_0x11.concat([0x2c, 0x00]); // Damage Chance Increase
  tmp_0x11 = tmp_0x11.concat([0x05, 0x00]); // Lower Reagent Cost
  tmp_0x11 = tmp_0x11.concat([0x00, 0x00]); // Hit Points Regeneration
  tmp_0x11 = tmp_0x11.concat([0x00, 0x00]); // Stamina Regeneration
  tmp_0x11 = tmp_0x11.concat([0x00, 0x00]); // Mana Regeneration
  tmp_0x11 = tmp_0x11.concat([0x00, 0x00]); // Reflect Physical Damage
  tmp_0x11 = tmp_0x11.concat([0x00, 0x00]); // Enhance Potions
  tmp_0x11 = tmp_0x11.concat([0x01, 0x00]); // Defense Chance Increase
  tmp_0x11 = tmp_0x11.concat([0x04, 0x00]); // Spell Damage Increase
  tmp_0x11 = tmp_0x11.concat([0x00, 0x00]); // Faster Cast Recovery
  tmp_0x11 = tmp_0x11.concat([0x00, 0x00]); // Faster Casting
  tmp_0x11 = tmp_0x11.concat([0x46, 0x00]); // Lower Mana Cost
  tmp_0x11 = tmp_0x11.concat([0x46, 0x00]); // Strength Increase
  tmp_0x11 = tmp_0x11.concat([0x46, 0x00]); // Dexterity Increase
  tmp_0x11 = tmp_0x11.concat([0x46, 0x00]); // Intelligence Increase
  tmp_0x11 = tmp_0x11.concat([0x46, 0x00]); // Hit Points Increase
  tmp_0x11 = tmp_0x11.concat([0x00, 0x00]); // Stamina Increase
  tmp_0x11 = tmp_0x11.concat([0x2d, 0x00]); // Mana Increase
  tmp_0x11 = tmp_0x11.concat([0x00, 0x00]); // Maximum Hit Points Increase
  tmp_0x11 = tmp_0x11.concat([0x00, 0x00]); // Maximum Stamina Increase
  tmp_0x11 = tmp_0x11.concat([0x00, 0x00]); // Maximum Mana Increase

  return Buffer.from(tmp_0x11);
};
