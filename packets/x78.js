// @flow

export const x78 = (): Buffer => {
  let tmp_0x78: Array<number> = [0x78]; // draw object

  tmp_0x78 = tmp_0x78.concat([0x00, 0x71]); // length
  tmp_0x78 = tmp_0x78.concat([0x00, 0x00, 0x1f, 0xc4]); // object serial
  tmp_0x78 = tmp_0x78.concat([0x01, 0x90]); // graphic ID
  tmp_0x78 = tmp_0x78.concat([0x05, 0xd8]); // X
  tmp_0x78 = tmp_0x78.concat([0x06, 0x5c]); // Y
  tmp_0x78 = tmp_0x78.concat([0x0a]); // Z
  tmp_0x78 = tmp_0x78.concat([0x03]); // direction/facing
  tmp_0x78 = tmp_0x78.concat([0x83, 0xea]); // color
  /*
  0x00: Normal
  0x01: Unknown
  0x02: Can Alter Paperdoll
  0x04: Poisoned
  0x08: Golden Health
  0x10: Unknown
  0x20: Unknown
  0x40: War Mode

  0x12 Status Flag was a guild mates mount not in war mode. 
  0x52 is for the same pets status flag while in war mode. 
  Poisoned it stayed the same appropriately in each. 0x12 and 0x52
  */
  tmp_0x78 = tmp_0x78.concat([0x00]); // status flag (bitwise flag)
  /*
  0x1: Innocent (Blue)
  0x2: Friend (Green)
  0x3: Grey (Grey - Animal)
  0x4: Criminal (Grey)
  0x5: Enemy (Orange)
  0x6: Murderer (Red)
  0x7: Invulnerable (Yellow)
  */
  tmp_0x78 = tmp_0x78.concat([0x01]); // notoriety
  // loop if next block is not [0x00, 0x00, 0x00, 0x00]
  tmp_0x78 = tmp_0x78.concat([0x40, 0x00, 0x1f, 0xc3, 0x0e, 0x75, 0x15, 0x00, 0x00]); // BYTE[4] Serial
  tmp_0x78 = tmp_0x78.concat([0x40, 0x00, 0x1f, 0xc1, 0x20, 0x3b, 0x0b, 0x04, 0x4e]); // BYTE[2] Graphic
  tmp_0x78 = tmp_0x78.concat([0x40, 0x00, 0x1f, 0xbd, 0x0a, 0x28, 0x02, 0x00, 0x00]); // BYTE[1] Layer
  tmp_0x78 = tmp_0x78.concat([0x40, 0x00, 0x1f, 0xbb, 0x15, 0x17, 0x05, 0x01, 0xf5]); // BYTE[2] Color (this byte only needed if (Graphic&0x8000)
  tmp_0x78 = tmp_0x78.concat([0x40, 0x00, 0x1f, 0xba, 0x15, 0x2e, 0x04, 0x01, 0xd9]); //
  tmp_0x78 = tmp_0x78.concat([0x40, 0x00, 0x1f, 0xb9, 0x17, 0x0f, 0x03, 0x00, 0x00]); //
  tmp_0x78 = tmp_0x78.concat([0x40, 0x00, 0x1f, 0xb8, 0x0e, 0xfa, 0x01, 0x00, 0x00]); //
  tmp_0x78 = tmp_0x78.concat([0x40, 0x00, 0x1f, 0xb4, 0x17, 0x18, 0x06, 0x00, 0x00]); //
  tmp_0x78 = tmp_0x78.concat([0x40, 0x00, 0x1f, 0xb3, 0x1f, 0x03, 0x16, 0x05, 0x2f]); //
  tmp_0x78 = tmp_0x78.concat([0x40, 0x00, 0x1f, 0xb2, 0x13, 0xc6, 0x07, 0x00, 0x00]); //
  // endLoop
  tmp_0x78 = tmp_0x78.concat([0x00, 0x00, 0x00, 0x00]); // BYTE[4] 0x00000000

  return Buffer.from(tmp_0x78);
};
